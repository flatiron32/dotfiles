#!/usr/bin/env bash

function symlink_dirs() {
    SOURCE_DIR=$1
    TARGET_DIR=$2
    FILES_TO_LINK=`ls ${SOURCE_DIR}`
    for REAL_FILE in ${FILES_TO_LINK}; do
        filename="${REAL_FILE}"
        echo "linking  ${SOURCE_DIR}/${REAL_FILE} to ${TARGET_DIR}/.${filename}"
        # Move existing to backup
        [ -f ~/.${filename} ] && mv ~/.${filename} ~/.dotfiles/backup/${filename}
        # Link it
        ln -sf ${SOURCE_DIR}/${REAL_FILE} ${TARGET_DIR}/.${filename}
    done
}

mkdir -p ~/.dotfiles/backup
mkdir -p ~/.dotfiles/private/{personal,work}
chmod 700 ~/.dotfiles/private/{personal,work}

symlink_dirs ~/.dotfiles/link ~
#symlink_dirs ~/Dropbox/scripts/private_dotfiles/personal ~/.dotfiles/private/personal
#symlink_dirs ~/Dropbox/scripts/private_dotfiles/grubhub ~/.dotfiles/private/work

git config --global url.ssh://git@github.com/.insteadOf https://github.com/
git config --global color.branch auto
git config --global color.diff auto
git config --global color.status auto
git config --global color.branch.current 'yellow reverse'
git config --global color.branch.local 'yellow'
git config --global color.branch.remote 'green'
git config --global color.diff.meta 'yellow bold'
git config --global color.diff.frag 'magenta bold'
git config --global color.diff.old 'red bold'
git config --global color.diff.new 'green bold'
git config --global color.status.added 'yellow'
git config --global color.status.changed 'green'
git config --global color.status.untracked 'cyan'
